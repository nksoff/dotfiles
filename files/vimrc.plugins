"
" [vundle plugins]
"
" load vundle core itself
filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"
" [ruby]
"
Plugin 'vim-ruby/vim-ruby'

"
" [js]
"
Plugin 'pangloss/vim-javascript'
Plugin 'leshill/vim-json'
Plugin 'itspriddle/vim-jquery'
autocmd BufRead,BufNewFile *.js set ft=javascript syntax=jquery

"
" [css]
"
Plugin 'JulesWang/css.vim'
Plugin 'hail2u/vim-css3-syntax'
" less
Plugin 'groenewege/vim-less'
" stylus
Plugin 'wavded/vim-stylus'

"
" [html/xml]
"
Plugin 'othree/html5.vim'
Plugin 'othree/html5-syntax.vim'
Plugin 'mattn/emmet-vim'
Plugin 'Valloric/MatchTagAlways'
"
" [jade]
"
Plugin 'digitaltoad/vim-jade'
"
" [haml]
"
Plugin 'tpope/vim-haml'

"
" [yaml]
"
Plugin 'ingydotnet/yaml-vim'
Plugin 'chase/vim-ansible-yaml'

"
" [markdown]
"
Plugin 'tpope/vim-markdown'
Plugin 'jtratner/vim-flavored-markdown'
augroup markdown
    au!
    au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END

"
" [raml]
"
Plugin 'kennethzfeng/vim-raml'

"
" [php]
"
Plugin 'StanAngeloff/php.vim'
if has("autocmd")
    function! PhpSyntaxOverride()
        hi! def link phpDocTags  phpDefine
        hi! def link phpDocParam phpType
    endfunction
    augroup phpSyntaxOverride
        autocmd!
        autocmd FileType php call PhpSyntaxOverride()
    augroup END
endif

"
" [python]
"
Plugin 'hdima/python-syntax'
Plugin 'vim-scripts/django.vim'

"
" [nginx]
"
Plugin 'nginx.vim'
au BufRead,BufNewFile *nginx*conf* set filetype=nginx

"
" [vim improvements]
"

" matching of tags, { and }, ...
" % - go to another tag, {, }, ...
Plugin 'tmhedberg/matchit'

" complettion by <Tab>
Plugin 'ervandew/supertab'

" taglist
if executable('exuberant-ctags') || executable('exctags') || executable('ctags') || executable('ctags.exe') || executable('tags')
    Plugin 'taglist.vim'
    nnoremap <silent> Â± :TlistToggle<CR>
endif

" Ctrl P - finder for vim
" <Ctrl-P> = open
" <Ctrl-f>, <Ctrl-b> - switch modes
" <Ctrl-t> = open file in new tab
Plugin 'kien/ctrlp.vim'

" ack
" :Ack [options] [what] [where]
Plugin 'mileszs/ack.vim'

" .editorconfig support
Plugin 'editorconfig/editorconfig-vim'

" status line
Plugin 'bling/vim-airline'

" gS = split a one-liner into multiple lines
" gJ = join a block into a single-line statement
Plugin 'AndrewRadev/splitjoin.vim'
nmap sj :SplitjoinSplit<cr>
nmap sk :SplitjoinJoin<cr>

" automatically close { [ " etc.
Plugin 'Raimondi/delimitMate'

" visual search = select word, * or # = search selected
Plugin 'nelstrom/vim-visual-star-search'

" easy motion
" ,,w = turn it on
Plugin 'skwp/vim-easymotion'
" hi clear EasyMotionTarget
" hi! EasyMotionTarget guifg=yellow
nmap <leader><ESC> <leader><leader>w
nmap <leader><S-ESC> <leader><leader>b

" comments
" gcc = comment by single-line
Plugin 'tomtom/tcomment_vim'
nmap <silent> gcp <c-_>p

" At match # out of N matches
Plugin 'vim-scripts/IndexedSearch'

" cs"' = change " around to '
" ds" = remove "
" yss) = surround line with ()
Plugin 'tpope/vim-surround'

" file/directory tree
" ,n = open NERDTree
Plugin 'scrooloose/nerdtree'
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let g:NERDTreeWinSize = 30
nmap <leader>n :NERDTreeToggle<CR>
function! StartUp()
    if 0 == argc()
        NERDTree
    end
endfunction

autocmd VimEnter * call StartUp()

" magic working with text columns
Plugin 'coderifous/textobj-word-column.vim'

" ,ig = show indents
Plugin 'nathanaelkane/vim-indent-guides'
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=3
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=4
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1

" syntax checking
Plugin 'scrooloose/syntastic'
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" showing git changes
Plugin 'mhinz/vim-signify'

"
" [color scheme]
"
Plugin 'altercation/vim-colors-solarized'

call vundle#end()
filetype plugin indent on
